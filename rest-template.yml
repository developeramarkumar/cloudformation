AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Lambda function ListBucketsCommand.
Resources:
  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "*"
                Resource: "*"

  MyHttpFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      Runtime: nodejs20.x
      FunctionName: MyLambdaFunctionRest
      Timeout: 10
      Role: !GetAtt IAMRole.Arn
      Handler: index.handler
      InlineCode: |
        exports.handler = async function(event) {
          return {
            statusCode: 200,
            body: JSON.stringify("Hello  from Lambda!"),
          };
        };
    # Our API: we'll use a separate Lambda function per route.
  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      EndpointConfiguration:
        Types:
          - EDGE
      Name: simple-rest-endpoint
  RestApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - HelloWorldApiGatewayMethod
    Properties:
      RestApiId: !Ref RestApi
      StageName: dev

  # Route 1: GET /hello_world
  HelloWorldApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: hello_world
      RestApiId: !Ref RestApi
  HelloWorldApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - MyHttpFunctionApiGatewayPermission
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Join
          - ""
          - - "arn:"
            - !Ref AWS::Partition
            - ":apigateway:"
            - !Ref AWS::Region
            - :lambda:path/2015-03-31/functions/
            - !GetAtt MyHttpFunction.Arn
            - /invocations
      ResourceId: !Ref HelloWorldApiGatewayResource
      RestApiId: !Ref RestApi
  MyHttpFunctionApiGatewayPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt MyHttpFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ""
        - - "arn:"
          - !Ref AWS::Partition
          - ":execute-api:"
          - !Ref AWS::Region
          - ":"
          - !Ref AWS::AccountId
          - ":"
          - !Ref RestApi
          - /*/*
Outputs:
  ApiUrl:
    Description: URL of the REST API.
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: RestApi
          - .execute-api.
          - Ref: AWS::Region
          - .
          - Ref: AWS::URLSuffix
          - /dev
